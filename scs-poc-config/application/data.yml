logging:
  file: ${spring.application.name}.log
  level:
    org.springframework.security: INFO
    org.springframework.cloud.netflix.zuul: INFO
    org.springframework.web.filter.CommonsRequestLoggingFilter: INFO
    com.demo.scs.poc: DEBUG
#    org.springframework.boot: TRACE
#    org.thymeleaf: DEBUG
#    org.thymeleaf.TemplateEngine.CONFIG: TRACE
#    org.thymeleaf.TemplateEngine.TIMER: TRACE
#    org.thymeleaf.TemplateEngine.cache.TEMPLATE_CACHE: TRACE

scspoc:
  gateway:
    url: http://${GATEWAY_HOST:localhost}:${GATEWAY_PORT:4000}
  ps-engine:
    url: http://node1-olichr1.x-temp.ham2.szops.net:9102/recommender
  ps-signaltracker:
    url: http://node1-olichr1.x-temp.ham2.szops.net:9100/signaltracker/st

# important: configure tomcat to handle x-forwarded- headers properly, otherwise redirects will not work
# properly for services running behind the zuul proxy
server:
  use-forward-headers: true

http:
  mappers:
    jsonPrettyPrint: true

spring:
  main:
    banner-mode: "off"
  boot:
#    admin:
#      url: http://monitoring:8083
#      client:
#        serviceUrl: http://movies:8080/movie-app
  thymeleaf:
    cache: false
    templateResolverOrder: 10
  redis:
    host: redis
  oauth2:
    resource:
      userInfoUri: http://${AUTH_HOST:localhost}:8888/auth/user
  zipkin:
    enabled: true
    baseUrl: http://${ZIPKIN_HOST:localhost}:9411
  sleuth:
    sampler:
      # sampler percentage 100% to test Zipkin
      percentage: 1.0


# disable security for management endpoints like /health
management:
  security:
    enabled: false

security:
  user:
    password: none
  oauth2:
    client:
      accessTokenUri: http://${AUTH_HOST:localhost}:8888/auth/oauth/token
      userAuthorizationUri: http://${GATEWAY_HOST:localhost}:8888/auth/oauth/authorize
      clientId: scsPOC-browser
      clientSecret: supergeheim
      scope: browser

    # server-to-server authentication without a user
    client-server2server:
      accessTokenUri: http://${AUTH_HOST:localhost}:8888/auth/oauth/token
      userAuthorizationUri: http://${GATEWAY_HOST:localhost}:8888/auth/oauth/authorize
      clientId: scsPOC-server
      clientSecret: nochgeheimer
      grant-type: client_credentials
      scope: server

    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----

graphite:
  host: ${GRAPHITE_HOST:localhost}
  port: 2003
  enabled: false

ribbon.eureka.enabled: false
spring.cloud.consul.ribbon.enabled: true
